# shell para o gde

#history:
#2019 - Created by Fred Nora and Luciano Gon√ßalez.

#todo:
#fazer um makefile pra compilar o shell
#obs: #bugbug tem que arrumas as coisas aqui.



VERSION = 0
PATCHLEVEL = 0
SUBLEVEL = 0
EXTRAVERSION =
#NAME = shell  

#todo:
#We need to simplify these flags

CFLAGS = -m32 \
	--std=gnu89 \
	-nodefaultlibs \
	-nostdinc \
	-nostdlib \
	-static \
	-fgnu89-inline \
	-ffreestanding \
	-fno-builtin \
	-fno-pie \
	-no-pie \
	-fno-stack-protector \
	-s

#	-fleading-underscore \
#	-fno-stack-protector \
#	-s



LIB     = ../../lib/libcore/include/
LIBOBJ  = ../../lib/libcore/obj
API     = ../../lib/libgui/include/
APIOBJ  = ../../lib/libgui/obj




	##
	## Objects
	##

myObjects = crt0.o main.o net.o \
shellui.o \
api.o \
ctype.o \
stdio.o \
stdlib.o \
string.o \
conio.o \
builtins.o \
desktop.o \
unistd.o \
socket.o \
wait.o \
termios.o \
ioctl.o \
stubs.o    




.PHONY: all all-c shell-link finalize clean

all: main.o all-c shell-link finalize clean
	@echo "Ok?"


main.o:
	gcc  -c  main.c  $(CFLAGS) -I $(LIB) -I $(API) -o main.o


all-c:

	gcc  -c  shellui.c   -I $(LIB) -I $(API)  $(CFLAGS) -o shellui.o
	gcc  -c  builtins.c  -I $(LIB) -I $(API)  $(CFLAGS) -o builtins.o
	gcc  -c  desktop.c   -I $(LIB) -I $(API)  $(CFLAGS) -o desktop.o
	gcc  -c  net.c       -I $(LIB) -I $(API)  $(CFLAGS) -o net.o


# Getting objects from libcore.
	cp $(LIBOBJ)/crt0.o .
	cp $(LIBOBJ)/stubs.o .
	cp $(LIBOBJ)/ctype.o   .
	cp $(LIBOBJ)/stdio.o .
	cp $(LIBOBJ)/stdlib.o .
	cp $(LIBOBJ)/string.o .
	cp $(LIBOBJ)/conio.o .
	cp $(LIBOBJ)/wait.o .
	cp $(LIBOBJ)/unistd.o .
	cp $(LIBOBJ)/socket.o .
	cp $(LIBOBJ)/termios.o .
	cp $(LIBOBJ)/ioctl.o .

# Getting api objects.
	cp $(APIOBJ)/api.o      .


shell-link:
	ld -m elf_i386 -T link.ld -o GDESHELL.BIN $(myObjects) -Map shell_map.s


finalize:
	cp GDESHELL.BIN ../../bin

clean:
	-rm *.o
	-rm GDESHELL.BIN 
	
	
